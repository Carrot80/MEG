function patients ()
   
PatientFolder = '/media/truecrypt7/kirsten_thesis/data/patients/';
ControlsFolder = '/media/truecrypt7/kirsten_thesis/data/controls/';

% for_all (PatientFolder, 'Patients')
% for_all (ControlsFolder, 'Controls')
calcDist()

end

function for_all (Folder, group)

    
    DIR = dir (Folder)
    isub = [DIR(:).isdir]; %  returns logical vector
    nameFolds = {DIR(isub).name}';
    nameFolds(ismember(nameFolds,{'.','..'})) = [];
    Table=[];

    for i= 1:size(nameFolds)
   
   [Table]=findClust(strcat(Folder, filesep, nameFolds{i,1}), nameFolds{i}, Table, i, 'fMRI')  
      [Table]=findClust_MEG(nameFolds{i}, group, Table, i, 'MEG')
   
    end

    Path=strcat('/home/kh/ShareWindows/data/Clusters_and_Locations_', group, '_fMRI_MEG_comparison.mat')
    save(Path, 'Table')
    
end





function [Table]=findClust(SubjectPath, SubjectName, Table, i, method)

%  !3dcalc -a Broca_left_dil+tlrc -b Broca_right_dil+tlrc -exp 'a+b' -prefix Broca_both_hemi
%  !3dcalc -a Wernicke_left_dil+tlrc -b Wernicke_right_dil+tlrc -exp 'a+b' -prefix Wernicke_both_hemi
 
PathBroca = strcat ('/home/kh/ShareWindows/data/patients/Broca_both_hemi+tlrc');
PathWernicke = strcat ('/home/kh/ShareWindows/data/patients/Wernicke_both_hemi+tlrc');


Path=strcat(SubjectPath, filesep, 'fMRI/statistics/Verbgeneration');

cd(Path)

%% Broca
if ~exist ('Broca_wspmT_0001_downsampled_z_transf+tlrc.BRIK', 'file')
    [V, Info]=BrikLoad('wspmT_0001_downsampled_z_transf+tlrc');
    [V_Broca, Info_Broca]=BrikLoad(PathBroca);
    V_TValues_Broca=V.*V_Broca;
    
    OptTSOut.Prefix = 'Broca_wspmT_0001_downsampled_z_transf'
    OptTSOut.View = '+tlrc'
    WriteBrik (V_TValues_Broca, Info, OptTSOut);
end


    eval(['!3dclust -1noneg -1thresh 1.644853 6 1000 Broca_wspmT_0001_downsampled_z_transf+tlrc > Clust_Broca_down_MEG.txt'])

    %% Wernicke:
 
    if ~exist ('Wernicke_wspmT_0001_downsampled_z_transf+tlrc.BRIK', 'file')
        [V, Info]=BrikLoad('wspmT_0001_downsampled_z_transf+tlrc');
        [V_Wernicke, Info_Wernicke]=BrikLoad(PathWernicke);
        V_TValues_Wernicke=V.*V_Wernicke;
        
        OptTSOut.Prefix = 'Wernicke_wspmT_0001_downsampled_z_transf'
        OptTSOut.View = '+tlrc'
        WriteBrik (V_TValues_Wernicke, Info, OptTSOut);
    end


    eval(['!3dclust -1noneg -1thresh 1.644853 5 1000 Wernicke_wspmT_0001_downsampled_z_transf+tlrc > Clust_Wernicke_down_MEG.txt'])


    
%%

[Table]=kh_Whereami (SubjectPath, SubjectName, Table, i, 'Broca', 1, method)
[Table]=kh_Whereami (SubjectPath, SubjectName, Table, i, 'Wernicke', 2, method)

end

function [Table, Mask]=kh_Whereami (SubjectPath, SubjectName, Table, i, Mask, A, method)

[newData1]=importfile2 (strcat('Clust_', Mask, '_down_MEG.txt'));

if 0==isstruct(newData1) %kh, Patient18 hat no extreme values
    Table.(Mask).Location{i,1} = 'subject has no extreme Value';
    Table.(Mask).Coord(i,1:4)  = [NaN NaN NaN NaN];
    return
end

% Max=max(newData1.data(:,13))
% [row_Max, col]=find(newData1.data==Max)
[row_Max, col]=find(newData1.data==max(newData1.data(:,13)))

eval(['!whereami ', num2str(newData1.data(row_Max,14)),' ', num2str(newData1.data(row_Max,15)),' ', num2str(newData1.data(row_Max,16)), ' > Clust_Whereami_MEG_' Mask,'.txt' ])

fid = fopen(strcat('Clust_Whereami_MEG_',Mask, '.txt'));
Whereami=textscan(fid, '%s', 'delimiter', sprintf('\f'));
fclose(fid)

Number=strfind( Whereami{1,1}, 'Atlas CA_ML_18_MNIA: Macro Labels (N27)')
for j=1:length(Number)
    X(j)=~isempty(Number{j})
end

  X=double(X)
[row_1]=find(X==1)

if 1==isempty(row_1)
    Table.(Mask).Location{i,1} = 'no CA_ML_18_MNIA Labels';
    Table.(Mask).Coord(i,1:16) = newData1.data(row_Max,1:16);
    return
end

Table.(method).(Mask).Location{i,1} = Whereami{1,1}{row_1+1};
Table.(method).(Mask).Coord(i,1:16)  = newData1.data(row_Max,1:16);

end



function [newData1]=importfile2(fileToRead1)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

%  Auto-generated by MATLAB on 03-Jun-2014 14:21:13

% Import the file
newData1 = importdata(fileToRead1);

if 0==isstruct(newData1) %kh, Patient18 hat no extreme values 
    return
end

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData1);
for i = 1:length(vars)
    assignin('base', vars{i}, newData1.(vars{i}));
end

end


function    [Table]=findClust_MEG(SubjectName, group, Table, i, method)

if 1==strcmp(group, 'Patients')
    Path=strcat('/home/kh/ShareWindows/data/patients/patients_SAM', filesep, SubjectName, filesep, 'TimeIntervalls');
else 
    Path=strcat('/home/kh/ShareWindows/data/controls/controls_SAM', filesep, SubjectName, filesep, 'SAM');
end

cd(Path)

PathBroca = strcat ('/home/kh/ShareWindows/data/patients/Broca_both_hemi+tlrc');
PathWernicke = strcat ('/home/kh/ShareWindows/data/patients/Wernicke_both_hemi+tlrc');


%% Broca

if 1==strcmp (SubjectName,'Pat_02_13008rh') || 1==strcmp (SubjectName,'Pat_03_13014bg')
    
    [V, Info]=BrikLoad(strcat('BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s+tlrc'));
    [V_Broca, Info_Broca]=BrikLoad(PathBroca);
    V_TValues_Broca=V.*V_Broca;
    
    OptTSOut.Prefix = 'Broca_BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s'
    OptTSOut.View = '+tlrc'
    WriteBrik (V_TValues_Broca, Info, OptTSOut);
    eval(['!3dclust -1noneg -1thresh 1.644853 6 1000 Broca_BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s+tlrc > Clust_Broca_down_MEG.txt'])

    
else
    
    if ~exist ('Broca_br_z_transf_brain01ERF_noise_abs_0.32-0.6s+tlrc.BRIK', 'file')
        [V, Info]=BrikLoad(strcat('br_z_transf_brain01ERF_noise_abs_0.32-0.6s_', SubjectName, '+tlrc'));
        [V_Broca, Info_Broca]=BrikLoad(PathBroca);
        V_TValues_Broca=V.*V_Broca;
        
        OptTSOut.Prefix = 'Broca_br_z_transf_brain01ERF_noise_abs_0.32-0.6s'
        OptTSOut.View = '+tlrc'
        WriteBrik (V_TValues_Broca, Info, OptTSOut);
    end
    
    eval(['!3dclust -1noneg -1thresh 1.644853 6 1000 Broca_br_z_transf_brain01ERF_noise_abs_0.32-0.6s+tlrc > Clust_Broca_down_MEG.txt'])
    
    
   
end
  
 
%% Wernicke;

if 1==strcmp (SubjectName,'Pat_02_13008rh') || 1==strcmp (SubjectName,'Pat_03_13014bg')
    
    [V, Info]=BrikLoad(strcat('BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s+tlrc'));
    [V_Wernicke, Info_Wernicke]=BrikLoad(PathWernicke);
    V_ZValues_Wernicke=V.*V_Wernicke;
    
    OptTSOut.Prefix = 'Wernicke_BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s'
    OptTSOut.View = '+tlrc'
    WriteBrik (V_ZValues_Wernicke, Info, OptTSOut);
    eval(['!3dclust -1noneg -1thresh 1.644853 6 1000 Wernicke_BothRuns_br_z_transf_brain01ERF_noise_0.32-0.6s+tlrc > Clust_Wernicke_down_MEG.txt'])
    
else
    
    if ~exist ('Wernicke_br_z_transf_brain01ERF_noise_abs_0.32-0.6s+tlrc.BRIK', 'file')
        [V, Info]=BrikLoad(strcat('br_z_transf_brain01ERF_noise_abs_0.32-0.6s_', SubjectName, '+tlrc'));
        [V_Wernicke, Info_Wernicke]=BrikLoad(PathWernicke);
        V_ZValues_Wernicke=V.*V_Wernicke;
        
        OptTSOut.Prefix = 'Wernicke_br_z_transf_brain01ERF_noise_abs_0.32-0.6s'
        OptTSOut.View = '+tlrc'
        WriteBrik (V_ZValues_Wernicke, Info, OptTSOut);
    end
    
    eval(['!3dclust -1noneg -1thresh 1.644853 6 1000 Wernicke_br_z_transf_brain01ERF_noise_abs_0.32-0.6s+tlrc > Clust_Wernicke_down_MEG.txt'])
    
end

if 1==strcmp(group, 'Patients')
[Table]=kh_Whereami (strcat('/home/kh/ShareWindows/data/patients/patients_SAM/', SubjectName), SubjectName, Table, i, 'Broca', 1, method)
[Table]=kh_Whereami (strcat('/home/kh/ShareWindows/data/patients/patients_SAM/', SubjectName), SubjectName, Table, i, 'Wernicke', 2, method)

else
    
[Table]=kh_Whereami (strcat('/home/kh/ShareWindows/data/controls/controls_SAM/', SubjectName), SubjectName, Table, i, 'Broca', 1, method)
[Table]=kh_Whereami (strcat('/home/kh/ShareWindows/data/controls/controls_SAM/', SubjectName), SubjectName, Table, i, 'Wernicke', 2, method)

end

end




function calcDist()

% calculates Clusterdistance
% Broca Patients

Pat=load('/home/kh/ShareWindows/data/Clusters_and_Locations_Patients_fMRI_MEG_comparison.mat')
Cont=load('/home/kh/ShareWindows/data/Clusters_and_Locations_Controls_fMRI_MEG_comparison.mat')

%% Broca

Broca_fMRI=[Pat.Table.fMRI.Broca.Coord; Cont.Table.fMRI.Broca.Coord]
Broca_MEG=[Pat.Table.MEG.Broca.Coord; Cont.Table.MEG.Broca.Coord]

d.Broca=zeros(size(Broca_MEG,1), 1)

for j=1:length(Broca_fMRI)
    
    d.Broca(j,1)=sqrt((Broca_fMRI(j,14)-Broca_MEG(j,14))^2+(Broca_fMRI(j,15)-Broca_MEG(j,15))^2+(Broca_fMRI(j,16)-Broca_MEG(j,16))^2)
    
end

% Wernicke

Wernicke_fMRI=[Pat.Table.fMRI.Wernicke.Coord; Cont.Table.fMRI.Wernicke.Coord]
Wernicke_MEG=[Pat.Table.MEG.Wernicke.Coord; Cont.Table.MEG.Wernicke.Coord]

d.Wernicke=zeros(size(Wernicke_MEG,1), 1)

for j=1:length(Wernicke_fMRI)
    
    d.Wernicke(j,1)=sqrt((Wernicke_fMRI(j,14)-Wernicke_MEG(j,14))^2+(Wernicke_fMRI(j,15)-Wernicke_MEG(j,15))^2+(Wernicke_fMRI(j,16)-Wernicke_MEG(j,16))^2)
    
end


Path='/home/kh/ShareWindows/data/Clusterdistance_fMRI_MEG_comparison.mat';
save(Path, 'd')



end

